package org.springframework.cloud.contract.spec

enum class HttpStatus(val code: Int) {
	CONTINUE(org.springframework.cloud.contract.spec.internal.HttpStatus.CONTINUE),
	SWITCHING_PROTOCOLS(org.springframework.cloud.contract.spec.internal.HttpStatus.SWITCHING_PROTOCOLS),
	PROCESSING(org.springframework.cloud.contract.spec.internal.HttpStatus.PROCESSING),
	CHECKPOINT(org.springframework.cloud.contract.spec.internal.HttpStatus.CHECKPOINT),
	OK(org.springframework.cloud.contract.spec.internal.HttpStatus.OK),
	CREATED(org.springframework.cloud.contract.spec.internal.HttpStatus.CREATED),
	ACCEPTED(org.springframework.cloud.contract.spec.internal.HttpStatus.ACCEPTED),
	NON_AUTHORITATIVE_INFORMATION(org.springframework.cloud.contract.spec.internal.HttpStatus.NON_AUTHORITATIVE_INFORMATION),
	NO_CONTENT(org.springframework.cloud.contract.spec.internal.HttpStatus.NO_CONTENT),
	RESET_CONTENT(org.springframework.cloud.contract.spec.internal.HttpStatus.RESET_CONTENT),
	PARTIAL_CONTENT(org.springframework.cloud.contract.spec.internal.HttpStatus.PARTIAL_CONTENT),
	MULTI_STATUS(org.springframework.cloud.contract.spec.internal.HttpStatus.MULTI_STATUS),
	ALREADY_REPORTED(org.springframework.cloud.contract.spec.internal.HttpStatus.ALREADY_REPORTED),
	IM_USED(org.springframework.cloud.contract.spec.internal.HttpStatus.IM_USED),
	MULTIPLE_CHOICES(org.springframework.cloud.contract.spec.internal.HttpStatus.MULTIPLE_CHOICES),
	MOVED_PERMANENTLY(org.springframework.cloud.contract.spec.internal.HttpStatus.MOVED_PERMANENTLY),
	FOUND(org.springframework.cloud.contract.spec.internal.HttpStatus.FOUND),
	SEE_OTHER(org.springframework.cloud.contract.spec.internal.HttpStatus.SEE_OTHER),
	NOT_MODIFIED(org.springframework.cloud.contract.spec.internal.HttpStatus.NOT_MODIFIED),
	TEMPORARY_REDIRECT(org.springframework.cloud.contract.spec.internal.HttpStatus.TEMPORARY_REDIRECT),
	PERMANENT_REDIRECT(org.springframework.cloud.contract.spec.internal.HttpStatus.PERMANENT_REDIRECT),
	BAD_REQUEST(org.springframework.cloud.contract.spec.internal.HttpStatus.BAD_REQUEST),
	UNAUTHORIZED(org.springframework.cloud.contract.spec.internal.HttpStatus.UNAUTHORIZED),
	PAYMENT_REQUIRED(org.springframework.cloud.contract.spec.internal.HttpStatus.PAYMENT_REQUIRED),
	FORBIDDEN(org.springframework.cloud.contract.spec.internal.HttpStatus.FORBIDDEN),
	NOT_FOUND(org.springframework.cloud.contract.spec.internal.HttpStatus.NOT_FOUND),
	METHOD_NOT_ALLOWED(org.springframework.cloud.contract.spec.internal.HttpStatus.METHOD_NOT_ALLOWED),
	NOT_ACCEPTABLE(org.springframework.cloud.contract.spec.internal.HttpStatus.NOT_ACCEPTABLE),
	PROXY_AUTHENTICATION_REQUIRED(org.springframework.cloud.contract.spec.internal.HttpStatus.PROXY_AUTHENTICATION_REQUIRED),
	REQUEST_TIMEOUT(org.springframework.cloud.contract.spec.internal.HttpStatus.REQUEST_TIMEOUT),
	CONFLICT(org.springframework.cloud.contract.spec.internal.HttpStatus.CONFLICT),
	GONE(org.springframework.cloud.contract.spec.internal.HttpStatus.GONE),
	LENGTH_REQUIRED(org.springframework.cloud.contract.spec.internal.HttpStatus.LENGTH_REQUIRED),
	PRECONDITION_FAILED(org.springframework.cloud.contract.spec.internal.HttpStatus.PRECONDITION_FAILED),
	PAYLOAD_TOO_LARGE(org.springframework.cloud.contract.spec.internal.HttpStatus.PAYLOAD_TOO_LARGE),
	UNSUPPORTED_MEDIA_TYPE(org.springframework.cloud.contract.spec.internal.HttpStatus.UNSUPPORTED_MEDIA_TYPE),
	REQUESTED_RANGE_NOT_SATISFIABLE(org.springframework.cloud.contract.spec.internal.HttpStatus.REQUESTED_RANGE_NOT_SATISFIABLE),
	EXPECTATION_FAILED(org.springframework.cloud.contract.spec.internal.HttpStatus.EXPECTATION_FAILED),
	I_AM_A_TEAPOT(org.springframework.cloud.contract.spec.internal.HttpStatus.I_AM_A_TEAPOT),
	UNPROCESSABLE_ENTITY(org.springframework.cloud.contract.spec.internal.HttpStatus.UNPROCESSABLE_ENTITY),
	LOCKED(org.springframework.cloud.contract.spec.internal.HttpStatus.LOCKED),
	FAILED_DEPENDENCY(org.springframework.cloud.contract.spec.internal.HttpStatus.FAILED_DEPENDENCY),
	UPGRADE_REQUIRED(org.springframework.cloud.contract.spec.internal.HttpStatus.UPGRADE_REQUIRED),
	PRECONDITION_REQUIRED(org.springframework.cloud.contract.spec.internal.HttpStatus.PRECONDITION_REQUIRED),
	TOO_MANY_REQUESTS(org.springframework.cloud.contract.spec.internal.HttpStatus.TOO_MANY_REQUESTS),
	REQUEST_HEADER_FIELDS_TOO_LARGE(org.springframework.cloud.contract.spec.internal.HttpStatus.REQUEST_HEADER_FIELDS_TOO_LARGE),
	UNAVAILABLE_FOR_LEGAL_REASONS(org.springframework.cloud.contract.spec.internal.HttpStatus.UNAVAILABLE_FOR_LEGAL_REASONS),
	INTERNAL_SERVER_ERROR(org.springframework.cloud.contract.spec.internal.HttpStatus.INTERNAL_SERVER_ERROR),
	NOT_IMPLEMENTED(org.springframework.cloud.contract.spec.internal.HttpStatus.NOT_IMPLEMENTED),
	BAD_GATEWAY(org.springframework.cloud.contract.spec.internal.HttpStatus.BAD_GATEWAY),
	SERVICE_UNAVAILABLE(org.springframework.cloud.contract.spec.internal.HttpStatus.SERVICE_UNAVAILABLE),
	GATEWAY_TIMEOUT(org.springframework.cloud.contract.spec.internal.HttpStatus.GATEWAY_TIMEOUT),
	HTTP_VERSION_NOT_SUPPORTED(org.springframework.cloud.contract.spec.internal.HttpStatus.HTTP_VERSION_NOT_SUPPORTED),
	VARIANT_ALSO_NEGOTIATES(org.springframework.cloud.contract.spec.internal.HttpStatus.VARIANT_ALSO_NEGOTIATES),
	INSUFFICIENT_STORAGE(org.springframework.cloud.contract.spec.internal.HttpStatus.INSUFFICIENT_STORAGE),
	LOOP_DETECTED(org.springframework.cloud.contract.spec.internal.HttpStatus.LOOP_DETECTED),
	BANDWIDTH_LIMIT_EXCEEDED(org.springframework.cloud.contract.spec.internal.HttpStatus.BANDWIDTH_LIMIT_EXCEEDED),
	NOT_EXTENDED(org.springframework.cloud.contract.spec.internal.HttpStatus.NOT_EXTENDED),
	NETWORK_AUTHENTICATION_REQUIRED(org.springframework.cloud.contract.spec.internal.HttpStatus.NETWORK_AUTHENTICATION_REQUIRED)
}
